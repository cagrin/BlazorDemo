@inject WeatherForecastService ForecastService

<DataGrid TItem="WeatherForecast"
    Data="@Data"
    ShowPager="true" ShowPageSizes="true" PagerPosition="@DataGridPagerPosition.Top"
    Filterable="true"
    Class="table-bordered">
    <ChildContent>
        <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.Date)" Caption="Date">
            <DisplayTemplate>
                @{
                    var date = (context as WeatherForecast)?.Date;

                    if (date != null)
                    {
                        @($"{date.Value.ToShortDateString()}")
                    }
                }
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureC)" Caption="Temp. (C)" />
        <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureF)" Caption="Temp. (F)" />
        <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.Summary)" Caption="Summary" />
    </ChildContent>
    <LoadingTemplate>
        <p><em>Loading...</em></p>
    </LoadingTemplate>
</DataGrid>

@code
{
    public WeatherForecast[]? Data { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.Data = await this.ForecastService.GetForecastAsync(DateTime.Now);
        await base.OnInitializedAsync();
    }
}